#!/bin/bash

# Script for rebuilding images

BUILD_DIR=built_firmware
workdir=$(pwd)
architecture="$*"

if [ -z "${architecture}" ]; then
  echo "Usage: ./rebuild <architecture>"
  echo " "
  echo "Example:"
  echo " "
  echo "  ./rebuild ar71xx"
  echo " "
  exit 1
fi

all_packages=$(cat openwrt_config/packages)

openwrt_image_rebuilder()
{
  local arch=$1
  local openwrt_checkout_dir=${workdir}/${BUILD_DIR}/openwrt
  local files_dir=${workdir}/files
  local build_dir=${workdir}/${BUILD_DIR}/builder.${arch}
  local kconfig=${workdir}/${BUILD_DIR}/openwrt/scripts/kconfig.pl
  local config_dir=${workdir}/openwrt_config/arch_configs
  local config=${build_dir}/.config

  if [ ! -d "${build_dir}" ]; then
    echo "No build dir found. Please run ./build first."
    exit 1
  fi

  echo "Configuring feeds"
  
  feedlines=()
  feed_file="${workdir}/openwrt_config/feeds"
  while read -r line
  do
      feedlines=("${feedlines[@]}" "${line}")
  done < "$feed_file"
  
  feed_titles=()
  feed_sources=()
  for feedline in "${feedlines[@]}"; do
      IFS=: read -a ARRAY <<< "${feedline}"
      feed_title=${ARRAY[*]:0:1}
      feed_titles=("${feed_titles[@]}" "${feed_title}")
      
      SAVE_IFS=$IFS
      IFS=":"
      feed_source="${ARRAY[*]:1}"
      IFS=$SAVE_IFS
      
      feed_sources=("${feed_sources[@]}" "${feed_source}")
  done

  cat /dev/null > ${openwrt_checkout_dir}/feeds.conf
  for feed_source in "${feed_sources[@]}"; do
      echo "${feed_source}"  >> ${openwrt_checkout_dir}/feeds.conf
  done

  cd ${openwrt_checkout_dir}

  # Importing feeds
  echo "Importing feeds"
  ./scripts/feeds update -a > /dev/null

  for pkg in ${all_packages}; do
      # Check if package name begins with a minus
      if [[ ${pkg:0:1} != "-" ]]; then
          ./scripts/feeds install ${pkg}
      fi
  done

  cd ${build_dir}

  # Delete previous config
  rm $config 2> /dev/null

  # Delete files
  rm -rf ${build_dir}/files
  
  # Copy files
  cp -a ${files_dir} ${build_dir}

  echo "Generating config file"
  # Include generic and arch-specific config options in config file
  $kconfig 'm+' ${config_dir}/generic ${config_dir}/${arch} > ${config}

  # Include all common packages
  for pkg in ${all_packages}; do
    # Check if package name begins with a minus
    if [[ ${pkg:0:1} == "-" ]]; then
      pkg=${pkg:1:${#pkg}-1} # strip first character
      echo "CONFIG_PACKAGE_${pkg}=n" >> ${config}
    else
      echo "CONFIG_PACKAGE_${pkg}=y" >> ${config}      
    fi
  done

  # Complete config file generation
  cd ${build_dir}
  make defconfig &> ${build_dir}/build.echo

  # Deletes compiled stuffs but not toolchain nor staging_dir
  make clean

  echo "Rebuilding ${arch} in dir: ${build_dir}"  
  make V=99 -C "${build_dir}" &> "${build_dir}/rebuild.log"
  if [ "$?" != "0" ]; then
    echo "Image rebuild for architecture '${arch}' has failed. See rebuild.log for details!"
    exit 1
  fi

  echo "Done!"
  echo "Re-built firmware images should be in ${build_dir}/bin/"
}



echo "Re-building image for ${architecture}"
openwrt_image_rebuilder ${architecture}
