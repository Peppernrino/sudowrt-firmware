#!/bin/sh

. /lib/functions/uci-defaults.sh
. /lib/ar71xx.sh

# returns 0 (success) if this device has a 2.4 ghz radio 
has2point4radio() {
  local is2point4

  is2point4=$(iw phy | grep -i '[[:space:]]\+\*[[:space:]]\+24[0-9]\{2\}[[:space:]]\+Mhz' | wc -l)

  if [ "$is2point4" -gt "0" ]; then
    return 0
  fi
  return 1
}

# returns 0 (success) if this device has a 5 ghz radio
has5radio() {
  local is5

  is5=$(iw phy | grep -i '[[:space:]]\+\*[[:space:]]\+5[0-9]\{3\}[[:space:]]\+Mhz' | wc -l)
  if [ "$is5" -gt "0" ]; then
    return 0
  fi
  return 1
}

# return 0 (success) if this device has an integrated switch
hasSwitch() {
  local ret

  ret=$(swconfig list | grep -i 'found' | wc -l)
  if [ "$ret" -gt "0" ]; then
    return 0 
  fi

  return 1
}

ethernetIfaceCount() {
  local count  

  count=$(ip link show | grep 'eth[0-9][0-9]*' | wc -l)
 
  echo $count 
}

ucidef_set_interface_loopback

board=$(ar71xx_board_name)

echo "This a device of type: $board"

band=""

if has2point4radio; then
  echo "This device has a 2.4 ghz radio"
  band="2.4ghz"
fi

if has5radio; then 
  echo "This device has a 5 ghz radio"
  if [ "$band" == "2.4ghz" ]; then
    band="dual"
  else
    band="5ghz"
  fi
fi

ret=$( ethernetIfaceCount )
if [ "$ret" == "1" ]; then
  echo "This device has only one ethernet interface"
elif [ "$ret" -gt "1" ]; then
  echo "This device has multiple ethernet interfaces"
else
  echo "This device has no ethernet interfaces"
fi

if hasSwitch; then
  echo "This device has an integrated switch"
else
  echo "This device does not have an integrated switch"
fi

network_config="/opt/sudowrt/${board}/network"
wireless_config="/opt/sudowrt/${board}/${band}/wireless"

if [ ! -f $network_config ]; then
  echo "Network configuration file missing: $network_config"
  echo "Will try again on next reboot"
  exit 1
fi

if [ ! -f $wireless_config ]; then
  echo "Wireless configuration file missing: $wireless_config"
  echo "Will try again on next reboot"
  exit 1
fi

echo "Using network config: $network_config"
cp $network_config /etc/config/network

echo "Using wireless config: $wireless_config"
cp $wireless_config /etc/config/wireless

exit 0

