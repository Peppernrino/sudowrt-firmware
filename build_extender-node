#!/bin/bash

# Script for building antenna-node images with image-builder

BUILD_DIR=built_firmware
workdir=$(pwd)

architectures=$(cat openwrt_config/architectures)
all_packages=$(cat openwrt_config/packages.extender-node)

pkg_list=""

for pkg in $all_packages; do
  pkg_list="${pkg_list} ${pkg}"
done


log()
{
  echo "[sudomesh extender-node firmware] build: $*"
}


# Need a different directory for the image builder
openwrt_setup_imagebuilder()
{
  local arch=$1
  local build_dir=${workdir}/${BUILD_DIR}/builder.${arch}.extender



}


openwrt_image_builder()
{
  local arch=$1
  local parent_build_dir=${workdir}/${BUILD_DIR}/builder.${arch}
  local build_dir=${workdir}/${BUILD_DIR}/builder.${arch}.extender

  # Make hardlinks to avoid space duplication but to still isolate builds
  cp -lr ${parent_build_dir} ${build_dir}

  cp -r ${build_dir}/target/imagebuilder/files/* ${build_dir}

#  make V=99 -C "${build_dir}" image PROFILE="UBNT" PACKAGES="${pkg_list}" NAME="extender_node" &> "${build_dir}/build.extender-node.log"
  make V=99 -C "${build_dir}" image PACKAGES="${pkg_list}" NAME="extender_node" &> "${build_dir}/build.extender-node.log"
  if [ "$?" != "0" ]; then
    log "Image build for extender node for architecture '${arch}' has failed. See build.extender-node.log for details!"
    exit 1
  fi
}

for arch in $architectures; do
  openwrt_image_builder ${arch} &
  bpid=$!
  builder_pids="${builder_pids} ${bpid}"

  log " * ${arch} (${bpid})"
done

# Trap interruptions
trap_handler()
{
  local pgid=$(ps -p $$ -o pgid="")
  kill -- -${pgid}
  exit
}
trap trap_handler INT QUIT TERM EXIT

log "Waiting for builders to finish building..."
wait ${builder_pids}
